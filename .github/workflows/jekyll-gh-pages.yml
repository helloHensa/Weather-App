name: Deploy Parcel with GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js and npm
        uses: actions/setup-node@v4
        with:
          node-version: 16
      - name: Install dependencies
        run: npm install
      - name: Build with Parcel
        run: npm run build # Ustaw odpowiednią komendę, jeśli używasz innej komendy do budowania w package.json
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: github-pages
          path: dist/
      
           # Ustaw odpowiednią ścieżkę, jeśli używasz innej struktury folderów

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: actions/download-artifact@v4
      with:
        name: dist/github-pages

    - name: Display structure of downloaded files
      run: ls -R

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v3
      
        
        
           # nazwa artefaktu, upewnij się, że to odpowiada nazwie użytej w upload-artifact

          
          